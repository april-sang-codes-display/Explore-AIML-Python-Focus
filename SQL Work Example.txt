#1
SELECT n_nationkey AS id,n_name AS name FROM nation WHERE n_regionkey = 1;

#2
SELECT DISTINCT o_custkey from orders where o_orderdate > '2018-11-25' and o_totalprice >= 265000 and o_totalprice <= 280000
ORDER BY o_custkey ASC;

#3
SELECT c_custkey,c_name,c_acctbal from customer where c_nationkey < 2 and c_acctbal < 0; 

#4
SELECT p_name,s_name,n_name  
FROM nation JOIN supplier ON nation.n_nationkey = supplier.s_nationkey
		  JOIN partsupp ON supplier.s_suppkey = partsupp.ps_suppkey
		  JOIN part ON partsupp.ps_partkey = part.p_partkey
WHERE part.p_name LIKE '%ivory%' and nation.n_name = 'CANADA'or nation.n_name = 'FRANCE'
ORDER BY s_name ASC LIMIT 8;

#5
Select s1.s_name,s2.s_name,s1.s_phone,s2.s_phone,s1.s_acctbal+s2.s_acctbal AS totalBalance
from supplier as s1 Join supplier s2 on s1.s_nationkey = s2.s_nationkey
where (LEFT(s1.s_phone, 6) = LEFT(s2.s_phone, 6)) and (s1.s_name<s2.s_name)

#6
SELECT COUNT(c_custkey) AS numCustomer,  COUNT(DISTINCT c_nationkey) AS numCountries, sum(c_acctbal) AS totalBalance, avg(length(c_address)) AS avgLength 
FROM customer 
Where c_mktsegment IN ('BUILDING','AUTOMOBILE','MACHINERY') and c_nationkey < 10

#7
select c_mktsegment,n_name,COUNT(distinct c_custkey) as numCustomer, COUNT(o_orderkey) as numOrders,max(c_acctbal) as maxBalance,min(c_acctbal) as minBalance
FROM customer JOIN nation ON customer.c_nationkey = nation.n_nationkey
	   LEFT OUTER JOIN orders ON customer.c_custkey = orders.o_custkey 
where nation.n_name LIKE '%A%'
GROUP BY c_mktsegment,n_name
HAVING max(c_acctbal) >= 9000 and COUNT(c_custkey) > 10 and COUNT(o_orderkey) > 180

#8
SELECT p_partkey,p_size
from part 
where p_partkey not in (select l_partkey from lineitem where MONTH(l_shipdate) = 5) and part.p_size BETWEEN 10 and 12
order by p_size DESC, p_partkey DESC

#9
SELECT c_name,c_acctbal
from customer
where c_acctbal = (select max(c_acctbal) from customer)

#10
select concat(p_mfgr," - ",p_brand) AS manufacturerBrand,p_partkey,sum(l_quantity) as totalQty
FROM part JOIN lineitem ON part.p_partkey = lineitem.l_partkey
group by p_partkey
having sum(l_quantity)/(1+0.6) > (select avg(inner_query.sumQ) from (select p_partkey, sum(l_quantity) as sumQ
	FROM part JOIN lineitem ON part.p_partkey = lineitem.l_partkey group by p_partkey)as inner_query)
order by sum(l_quantity) DESC

